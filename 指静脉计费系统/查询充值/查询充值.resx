<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAUDBAQEAwUEBAQFBQUGBwwIBwcHBw8LCwkMEQ8SEhEPERET
        FhwXExQaFRERGCEYGh0dHx8fExciJCIeJBweHx7/2wBDAQUFBQcGBw4ICA4eFBEUHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh7/wgARCAB9AMgDASIAAhEBAxEB/8QA
        GgABAAMBAQEAAAAAAAAAAAAAAgEDBAAFBv/EAB8QAAMBAQACAwEBAAAAAAAAAAABYRARIFEhMXEwQf/E
        ABgBAQEBAQEAAAAAAAAAAAAAAAABAgME/8QAGREBAQADAQAAAAAAAAAAAAAAEQABECAw/9oADAMBAAIQ
        AxAAAAH6Rh+zwJhubYd5pQriVCY6elmOnqMKJQWWgWJsBh0BRnQd3Ohsps6ZtdbYsdbc7EG5pFMKYm47
        u4goqSjNkIOhCDoQq3Q8eU2UW7l1lNqWWVNztQbm0E5uTLKiOTjJagItkKt0IQdBWq2zw4Nmezc02Z7D
        RZRYzc6nOdqrTnZNcsvjCIxDXCQ3Amu9IrmpvqpqXur4Fmey40WZ7DTbmss02ZmmlUNm7q1MuDyIktIG
        u6VcVtdVNR1fVy91fFVmZsarMllmuzJYa7Mdia3kVmucqNMZ+LzQS4VBbK6xDrFausCVdVxmeF3W54XZ
        vfnuz0H56PRXnJPRnz5rf2DjccRNoxmNYyhdVeYxoGcLo7J0uRZk3qWVWankVmtY1WxY5TZOOTX2Tq1R
        liNMZiaDniW40QtwqMW9R0v/xAAcEAEBAQEAAwEBAAAAAAAAAAAAARIRECAwQFD/2gAIAQEAAQUC/pT8
        d9aieJ+K+KqIniJ9qviqqInpPpfSqqIiJ+CqqqiIiJ9qqqqpURERL86tVVVVRKlRErrrrrrrrrrrq1at
        VVq1fEqVERK66666666666tVVWrfHXUqVK666660000066666tWrXXWmnWmmmmmmmmmmmmmmmmmmmnWm
        mmmmmmmmmmmmmmmmmmmmmmmmnXWmmmmmmmmmmmmmmmmmmmmnXfXrvjrrrrrrrrrrvjrvr//EABkRAQEB
        AQEBAAAAAAAAAAAAAAABESAQMP/aAAgBAwEBPwGqq8xET2qq8RETiqvEROasWMYxIk41rfcYzzWtb9sZ
        8sZ9v//EABkRAQEBAAMAAAAAAAAAAAAAABEAIBAwUP/aAAgBAgEBPwEiI0RERERkiIiIjZEYIiOCI6CI
        jzf/xAAUEAEAAAAAAAAAAAAAAAAAAACA/9oACAEBAAY/Akh//8QAGxABAQEBAQEBAQAAAAAAAAAAAQAQ
        ESBxMGH/2gAIAQEAAT8hIiIjCD8EnGZmZiIiIwiPTM4zMzMoiIjCI9MzpmZlKUYIiIj0zMzOGUpSwaER
        HtmdHClKUohjBEPlmZwyzKUpSlLBERHlmZmcKUpSlKUpQwwxdu527iyyylKUpYKUpSwGGHe6sssFKUpS
        loKWBCEPIGMfABS0FDoKUsCEIeAYxjgUpaCxDwFKUpSngGNa1r4qMYQhSEIUpSnj2ta1rGMY1hCEIUpC
        lL933fd95a1rGtYxjClIQhCk+vweP9TGsYxjWjDDDEJ2FCurq6urq6upV1LMYsst2//aAAwDAQACAAMA
        AAAQB/NwvvorpndrAgBMK+BoVrMBAxLrnw9MNc4kzqPdW2+BMFIW83XNBWhGUaTeMA1ABCFYqlYYNg7s
        CAKyNOfww1PUbhMyah4nOIOhq4Rx/8QAGREBAQEBAQEAAAAAAAAAAAAAAAERIRAg/9oACAEDAQE/EPGl
        LVrUqlekqoR6XyeIR6qxKELGJEJR7rUb6F8J6KNb8C2VZFIQmRPgOuuuuuuuuuuuu+mMYxjGMZ6WMYxj
        GMYxjGP/xAAZEQEBAAMBAAAAAAAAAAAAAAARAAEQIDD/2gAIAQIBAT8Q2MQiIjZnoAiI8QAiIiOARHIG
        zEIjg5A6IiIiIiI1jRERERzjM7Zmd5mb/8QAHxAAAwEBAAIDAQEAAAAAAAAAAAFhEBEgUSExcTBB/9oA
        CAEBAAE/EMUyuUuITBISOHDg0NHIQawuUz6Dn7Ptn75QmUEcODQxDnDz9s/bL4ONhsrwCPg+Bj8E9WGH
        8AHGHHOeYaYQjo2PDY+ow4w/iAMPwYYcYcYTEztGxsbHGHGGH6N5AE+TjDD4JnTo2MMMMMPk/jAIEYt0
        f4HGQwwmdO06MMMOOP8AA2aBH8xR2hhfDHcP4Df9ynVRRrgv3oJncdG9BPvxF66tRHgLTxqkgkOPY09i
        PGgp4KIK7lCpUqULFihQVH6HRQoWLYVKlSmncvq1Lly5cqI9io49jooVLly5cT7wqX3rFyxYuWLFihQV
        H7HRQoWLZd/9LZWL5ULFi2VipQoUEC2J0UKFCpYsO9lixYoULFChcoVESsTezr2dex0Ox3iqUKlChQoV
        GjRo0YME6OjEgXgAMHkmTRgwaNGjY//Z
</value>
  </data>
</root>